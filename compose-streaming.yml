version: '3.7'
volumes:
  redpanda: null
services:
  mysql:
      image: mysql/mysql-server:8.0.27
      hostname: mysql
      container_name: mysql
      ports:
        - 3306:3306
      environment:
        - MYSQL_ROOT_PASSWORD=debezium
        - MYSQL_USER=mysqluser
        - MYSQL_PASSWORD=mysqlpw
      volumes:
        - ./mysql/mysql.cnf:/etc/mysql/conf.d
        - ./mysql/mysql_bootstrap_with_data.sql:/docker-entrypoint-initdb.d/mysql_bootstrap.sql
        - ./mysql/data:/var/lib/mysql-files/data
  postgres:
    image: debezium/postgres:16
    container_name: postgres
    ports:
      - 5432:5432
    healthcheck:
      test: "pg_isready -U postgresuser -d masterclass"
      interval: 2s
      timeout: 20s
      retries: 10
    environment:
      - POSTGRES_USER=postgresuser
      - POSTGRES_PASSWORD=postgrespw
      - POSTGRES_DB=masterclass
      - PGPASSWORD=postgrespw
    volumes:
      - ./postgres/postgres_bootstrap.sql:/docker-entrypoint-initdb.d/postgres_bootstrap.sql
  redpanda:
    image: docker.redpanda.com/redpandadata/redpanda:v23.2.12
    container_name: redpanda
    command:
      - redpanda start
      - --smp 1
      - --overprovisioned
      - --kafka-addr internal://0.0.0.0:9092,external://0.0.0.0:19092
      # Address the broker advertises to clients that connect to the Kafka API.
      # Use the internal addresses to connect to the Redpanda brokers
      # from inside the same Docker network.
      # Use the external addresses to connect to the Redpanda brokers
      # from outside the Docker network.
      - --advertise-kafka-addr internal://redpanda:9092,external://localhost:19092
      - --pandaproxy-addr internal://0.0.0.0:8082,external://0.0.0.0:18082
      # Address the broker advertises to clients that connect to the HTTP Proxy.
      - --advertise-pandaproxy-addr internal://redpanda:8082,external://localhost:18082
      - --schema-registry-addr internal://0.0.0.0:8081,external://0.0.0.0:18081
      # Redpanda brokers use the RPC API to communicate with each other internally.
      - --rpc-addr redpanda:33145
      - --advertise-rpc-addr redpanda:33145
    ports:
      - 18081:18081
      - 18082:18082
      - 19092:19092
      - 19644:9644
    volumes:
      - redpanda:/var/lib/redpanda/data
    healthcheck:
      test: ["CMD-SHELL", "rpk cluster health | grep -E 'Healthy:.+true' || exit 1"]
      interval: 15s
      timeout: 3s
      retries: 5
      start_period: 5s
  debezium:
    image: debezium/connect:2.4
    container_name: debezium
    environment:
      BOOTSTRAP_SERVERS: redpanda:9092
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: connect_configs
      OFFSET_STORAGE_TOPIC: connect_offsets
    depends_on: [mysql, redpanda]
    ports:
      - 8083:8083
  # Flink job manager
  jobmanager:
    build: {context: ., dockerfile: Dockerfile}
    container_name: jobmanager
    ports:
      - 8081:8081
    command: jobmanager
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager
  # Flink task manager
  taskmanager:
    build: {context: ., dockerfile: Dockerfile}
    container_name: taskmanager
    depends_on:
      - jobmanager
    command: taskmanager
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager
        taskmanager.numberOfTaskSlots: 20
  # Flink SQL client
  sql-client:
    build: {context: ., dockerfile: Dockerfile}
    container_name: sql-client
    command:
      - /opt/flink/bin/sql-client.sh
      - embedded
      - -l
      - /opt/sql-client/lib
    depends_on:
      - jobmanager
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager
        rest.address: jobmanager
    volumes:
      - ./flink/sql:/etc/sql